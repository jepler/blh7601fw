// ... ADC registers don't match from F303 to F373!
#define ADC_BASE (PERIPH_BASE_APB2 + 0x2400)
#define ADC ADC_BASE

#define ADC_SR(base) MMIO32(base + 0x00)
#define ADC_SR_AWD (1<<0)
#define ADC_SR_EOC (1<<1)
#define ADC_SR_JEOC (1<<2)
#define ADC_SR_JSTRT (1<<3)
#define ADC_SR_STRT (1<<4)

#define ADC_CR1(base) MMIO32(base + 0x04)
#define ADC_CR1_AWDCH(x) ((x) << 0)
#define ADC_CR1_EOCIE (1<<5)
#define ADC_CR1_AWDIE (1<<6)
#define ADC_CR1_JEOCIE (1<<7)
#define ADC_CR1_SCAN (1<<8)
#define ADC_CR1_AWDSGL (1<<9)
#define ADC_CR1_JAUTO (1<<10)
#define ADC_CR1_DISCEN (1<<11)
#define ADC_CR1_JDISCEN (1<<12)
#define ADC_CR1_DISCNUM(x) ((x)<<13)
#define ADC_CR1_JAWDEN (1<<22)
#define ADC_CR1_AWDEN (1<<23)

#define ADC_CR2(base) MMIO32(base + 0x8)
#define ADC_CR2_ADON (1<<0)
#define ADC_CR2_CONT (1<<1)
#define ADC_CR2_CAL (1<<2)
#define ADC_CR2_RSTCAL (1<<3)
#define ADC_CR2_DMA (1<<8)
#define ADC_CR2_ALIGN (1<<11)
#define ADC_CR2_JEXTSEL(x) ((x)<<12)
#define ADC_CR2_JEXTTRIG (1<<15)
#define ADC_CR2_EXTSEL(x) ((x)<<17)
#define ADC_CR2_EXTTRIG (1<<20)
#define ADC_CR2_JSWSTART (1<<21)
#define ADC_CR2_SWSTART (1<<22)
#define ADC_CR2_TSVREFE (1<<23)

#define ADC_SMPR1(base) MMIO32(base + 0xc)
#define ADC_SMPR1_SMP10(x) ((x) << 0)
#define ADC_SMPR1_SMP11(x) ((x) << 3)
#define ADC_SMPR1_SMP12(x) ((x) << 6)
#define ADC_SMPR1_SMP13(x) ((x) << 9)
#define ADC_SMPR1_SMP14(x) ((x) << 12)
#define ADC_SMPR1_SMP15(x) ((x) << 15)
#define ADC_SMPR1_SMP16(x) ((x) << 18)
#define ADC_SMPR1_SMP17(x) ((x) << 21)
#define ADC_SMPR1_SMP18(x) ((x) << 24)

#define ADC_SMPR2(base) MMIO32(base + 0x10)
#define ADC_SMPR1_SMP0(x) ((x) << 0)
#define ADC_SMPR1_SMP1(x) ((x) << 3)
#define ADC_SMPR1_SMP2(x) ((x) << 6)
#define ADC_SMPR1_SMP3(x) ((x) << 9)
#define ADC_SMPR1_SMP4(x) ((x) << 12)
#define ADC_SMPR1_SMP5(x) ((x) << 15)
#define ADC_SMPR1_SMP6(x) ((x) << 18)
#define ADC_SMPR1_SMP7(x) ((x) << 21)
#define ADC_SMPR1_SMP8(x) ((x) << 24)
#define ADC_SMPR1_SMP9(x) ((x) << 27)

#define ADC_JOFR(base, x) MMIO32(base + 0x14 + 4*(x))

#define ADC_HTR(base) MMIO32(base + 0x24)

#define ADC_LTR(base) MMIO32(base + 0x28)

#define ADC_SQR1(base) MMIO32(base + 0x2c)
#define ADC_SQR1_SQ13(x) ((x) << 0)
#define ADC_SQR1_SQ14(x) ((x) << 5)
#define ADC_SQR1_SQ15(x) ((x) << 10)
#define ADC_SQR1_SQ16(x) ((x) << 15)
#define ADC_SQR1_L(x) ((x) << 20)

#define ADC_SQR2(base) MMIO32(base + 0x30)
#define ADC_SQR2_SQ7(x) ((x) << 0)
#define ADC_SQR2_SQ8(x) ((x) << 5)
#define ADC_SQR2_SQ9(x) ((x) << 10)
#define ADC_SQR2_SQ10(x) ((x) << 15)
#define ADC_SQR2_SQ11(x) ((x) << 20)
#define ADC_SQR2_SQ12(x) ((x) << 25)

#define ADC_SQR3(base) MMIO32(base + 0x34)
#define ADC_SQR3_SQ1(x) ((x) << 0)
#define ADC_SQR3_SQ2(x) ((x) << 5)
#define ADC_SQR3_SQ3(x) ((x) << 10)
#define ADC_SQR3_SQ4(x) ((x) << 15)
#define ADC_SQR3_SQ5(x) ((x) << 20)
#define ADC_SQR3_SQ6(x) ((x) << 25)

#define ADC_JSQR(base) MMIO32(base + 0x38)
#define ADC_JSQR_JSQ1(x) ((x) << 0)
#define ADC_JSQR_JSQ2(x) ((x) << 5)
#define ADC_JSQR_JSQ3(x) ((x) << 10)
#define ADC_JSQR_JSQ4(x) ((x) << 15)
#define ADC_JSQR_JL(x) ((x) << 20)

#define ADC_JDR(base, x) MMIO32(base + 0x3c + 4*(x))

#define ADC_DR(base) MMIO32(base + 0x4c)

#define RCC_APB2_ADC_CLOCK (1<<9)

#define SHIFT_ADCPRE(x) ((x)<<14)
#define MASK_ADCPRE (~SHIFT_ADCPRE(3))

